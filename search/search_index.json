{"config":{"lang":["ru"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p> mtwpay <p>\u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 Python \u043a\u043b\u0438\u0435\u043d\u0442 \u0434\u043b\u044f MyTonWallet Pay API</p> </p> <p> </p>"},{"location":"#_1","title":"\ud83d\udccc \u041e \u043f\u0440\u043e\u0435\u043a\u0442\u0435","text":"<p>mtwpay \u2014 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 Python \u043a\u043b\u0438\u0435\u043d\u0442 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 MyTonWallet Pay API. \u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u0441\u0447\u0435\u0442\u0430, \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \u0441\u0441\u044b\u043b\u043a\u0438 \u043d\u0430 \u043e\u043f\u043b\u0430\u0442\u0443 \u0438 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u043f\u043b\u0430\u0442\u0435\u0436\u0438 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e.</p>"},{"location":"#pypi","title":"\ud83d\udce6 PyPI","text":""},{"location":"#_2","title":"\ud83d\udcac \u0421\u043e\u043e\u0431\u0449\u0435\u0441\u0442\u0432\u043e","text":"<p>\u041f\u0440\u0438\u0441\u043e\u0435\u0434\u0438\u043d\u044f\u0439\u0442\u0435\u0441\u044c \u043a \u043d\u0430\u0448\u0435\u043c\u0443 \u0447\u0430\u0442\u0443 \u0432 Telegram: @mtwpay</p>"},{"location":"#quick-start","title":"Quick start","text":"<pre><code>import asyncio\nfrom mytonwallet_pay import MTWPay\nfrom datetime import datetime, timedelta\n\n\nasync def main():\n    mtw_pay = MTWPay(token=\"YOUR_TOKEN\", project_id=0)\n\n    inv = await mtw_pay.create_invoice(amount=300000000, coin=\"TON\", validUntil=datetime.now()+timedelta(minutes=5), description=\"My internal order info (id in your system, etc)\")\n    return inv.invoiceLink  # \u0421\u0441\u044b\u043b\u043a\u0430 \u0434\u043b\u044f \u043e\u043f\u043b\u0430\u0442\u044b \u0441\u0447\u0451\u0442\u0430\n\n\nif __name__ == \"__main__\":\n    print(asyncio.run(main()))\n</code></pre>"},{"location":"#_3","title":"\ud83d\udce6 \u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438","text":"<ul> <li>\u2705 \u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 \u043a\u043b\u0438\u0435\u043d\u0442 \u043d\u0430 <code>aiohttp</code> </li> <li>\u2705 \u041f\u043e\u043b\u043d\u0430\u044f \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 MyTonWallet Pay API</li> <li>\u2705 \u0411\u044b\u0441\u0442\u0440\u043e\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0447\u0435\u0442\u043e\u0432 \u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u0441\u044b\u043b\u043e\u043a \u0434\u043b\u044f \u043e\u043f\u043b\u0430\u0442\u044b  </li> <li>\u2705 \u0421\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u044c \u0441 Python 3.10+  </li> </ul>"},{"location":"#_4","title":"\ud83d\udc96 \u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u043f\u0440\u043e\u0435\u043a\u0442\u0430","text":"<p>\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432 \u0434\u043e\u043d\u0430\u0442\u043e\u043c:</p> \u0421\u0435\u0442\u044c \u0410\u0434\u0440\u0435\u0441 TON <code>UQCekZTSqysK4OUQFovzI31CILQj0GGjnYxBV77HlK2Zv1BM</code>"},{"location":"#_5","title":"\ud83d\udcdd \u041b\u0438\u0446\u0435\u043d\u0437\u0438\u044f","text":"<p>\u041f\u0440\u043e\u0435\u043a\u0442 \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u044f\u0435\u0442\u0441\u044f \u043f\u043e\u0434 \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0435\u0439 MIT.</p>"},{"location":"#_6","title":"\ud83d\udccc \u041a\u043e\u043d\u0442\u0430\u043a\u0442\u044b \u0438 \u043e\u0431\u0440\u0430\u0442\u043d\u0430\u044f \u0441\u0432\u044f\u0437\u044c","text":"<ul> <li>Telegram: @mtwpay </li> <li>GitHub Issues: \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0439\u0442\u0435 \u043b\u044e\u0431\u044b\u0435 \u0431\u0430\u0433\u0438 \u0438\u043b\u0438 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043f\u0440\u044f\u043c\u043e \u0432 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0438.</li> </ul>"},{"location":"api/","title":"API","text":""},{"location":"api/#cardlink-api-methods-implementation","title":"Cardlink API methods implementation.","text":"<ul> <li><code>MTWPay().create_invoice()</code></li> <li><code>MTWPay().get_invoices()</code></li> <li><code>MTWPay().get_invoice()</code></li> <li><code>MTWPay().get_me()</code></li> </ul>"},{"location":"api/#cardlink-api-types-implementation","title":"Cardlink API types implementation.","text":"<ul> <li><code>Coin</code></li> <li><code>Asset</code></li> <li><code>LiteralCoin</code></li> <li><code>LiteralAsset</code></li> <li><code>Invoice</code></li> <li><code>InvoiceStatus</code></li> <li><code>Project</code></li> </ul>"},{"location":"examples/","title":"Usage Examples","text":"<p>\u0413\u043e\u0442\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f mtwpay \u0441 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u043c \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u043c.</p>"},{"location":"examples/#_1","title":"\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f","text":"<pre><code>from mytonwallet_pay import MTWPay\n\nmtw_pay = MTWPay(token=\"YOUR_API_TOKEN\", project_id=0)\n</code></pre>"},{"location":"examples/#create_invoice","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0447\u0451\u0442\u0430 <code>create_invoice</code>","text":"<pre><code>from datetime import datetime, timedelta\nfrom mytonwallet_pay.types import Invoice\n\nasync def main() -&gt; None:\n    inv_ton: Invoice = await mtw_pay.create_invoice(\n        amount=1000000000,\n        coin=\"TON\",\n        validUntil=datetime.now()+timedelta(minutes=5),\n        description=\"order-12345\"\n    )\n    print(inv_ton.invoiceLink)  # \u0421\u0447\u0451\u0442 \u043d\u0430 1 TON\n\n    inv_usdt: Invoice = await mtw_pay.create_invoice(\n        amount=1000000,\n        coin=\"TON\",\n        validUntil=datetime.now()+timedelta(minutes=5),\n        description=\"order-12345\"\n    )\n    print(inv_usdt.invoiceLink)  # \u0421\u0447\u0451\u0442 \u043d\u0430 1 USDT\n</code></pre>"},{"location":"examples/#get_invoices-get_invoice","title":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u0447\u0435\u0442\u043e\u0432 <code>get_invoices</code> \u0438 <code>get_invoice</code>","text":"<pre><code>from mytonwallet_pay.types import Invoice\n\nasync def main() -&gt; None:\n    invoices: list[Invoice] = await mtw_pay.get_invoices(limit=100)\n    print(invoices)  # 100 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0445 \u0441\u0447\u0451\u0442\u043e\u0432\n\n    invoice: Invoice = await mtw_pay.get_invoice(id=1000)\n    print(invoice)  # \u0421\u0447\u0451\u0442 ID \u0441 1000\n\n</code></pre>"},{"location":"examples/#get_project","title":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430 <code>get_project</code>","text":"<pre><code>from mytonwallet_pay.types import Project\n\nasync def main() -&gt; None:\n    project: Project = await mtw_pay.get_me()\n    print(project)  # \u041f\u0440\u043e\u0435\u043a\u0442\n</code></pre>"}]}